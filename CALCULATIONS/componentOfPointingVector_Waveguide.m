function S_component = componentOfPointingVector_Waveguide(componentOfPV, typeOfCylinder, rho, phi, z, q, p, psi, a_excitation,...
            k_0, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, m, c, B_1, B_2, Cm2,  Dm2, dq_simp)
        
        switch(componentOfPV)
            case 'S_rho'
                if(abs(psi) == 0)
                    E_phi = field_of_discreteMode__ForBesselBeamRepresentation_OneDirection('Ephi', typeOfCylinder, rho, q, p, a_excitation,...
                            0, k_0,k_0, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, m, 0, 0, 0);
                    E_z = field_of_discreteMode__ForBesselBeamRepresentation_OneDirection('Ez', typeOfCylinder, rho, q, p, a_excitation,...
                            0, k_0,k_0, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, m, 0, 0, 0);
                    H_phi = field_of_discreteMode__ForBesselBeamRepresentation_OneDirection('Hphi', typeOfCylinder, rho, q, p, a_excitation,...
                            0, k_0,k_0, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, m, 0, 0, 0);
                    H_z = field_of_discreteMode__ForBesselBeamRepresentation_OneDirection('Hz', typeOfCylinder, rho, q, p, a_excitation,...
                            0, k_0,k_0, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, m, 0, 0, 0);
                else
                    E_phi = (k_0/2/pi) * sum(dq_simp.* field_AdapterTo_ContinuesFieldFunction('Ephi', typeOfCylinder, rho, z, q, p, k_0, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, m,...
                        a_excitation, psi, B_1, B_2, Cm2,  Dm2));
                    E_z = (k_0/2/pi) * sum(dq_simp.* field_AdapterTo_ContinuesFieldFunction('Ez', typeOfCylinder, rho, z, q, p, k_0, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, m,...
                        a_excitation, psi, B_1, B_2, Cm2,  Dm2));
                    H_phi = (k_0/2/pi) * sum(dq_simp.* field_AdapterTo_ContinuesFieldFunction('Hphi', typeOfCylinder, rho, z, q, p, k_0, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, m,...
                        a_excitation, psi, B_1, B_2, Cm2,  Dm2));
                    H_z = (k_0/2/pi) * sum(dq_simp.* field_AdapterTo_ContinuesFieldFunction('Hz', typeOfCylinder, rho, z, q, p, k_0, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, m,...
                        a_excitation, psi, B_1, B_2, Cm2,  Dm2));
                end
                S_component = c / (8 * pi) * real(E_phi.* conj(H_z) -  E_z.* conj(H_phi));
                
%             case 'S_phi'
                
            case 'S_z'
                if(abs(psi) == 0)
                    E_phi = field_of_discreteMode__ForBesselBeamRepresentation_OneDirection('Ephi', typeOfCylinder, rho, q, p, a_excitation,...
                            0, k_0,k_0, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, m, 0, 0, 0);
                    E_rho = field_of_discreteMode__ForBesselBeamRepresentation_OneDirection('Erho', typeOfCylinder, rho, q, p, a_excitation,...
                            0, k_0,k_0, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, m, 0, 0, 0);
                    H_phi = field_of_discreteMode__ForBesselBeamRepresentation_OneDirection('Hphi', typeOfCylinder, rho, q, p, a_excitation,...
                            0, k_0,k_0, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, m, 0, 0, 0);
                    H_rho = field_of_discreteMode__ForBesselBeamRepresentation_OneDirection('Hrho', typeOfCylinder, rho, q, p, a_excitation,...
                            0, k_0,k_0, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, m, 0, 0, 0);
                else
                    E_phi = (k_0/2/pi) * sum(dq_simp.* field_AdapterTo_ContinuesFieldFunction('Ephi', typeOfCylinder, rho, z, q, p, k_0, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, m,...
                        a_excitation, psi, B_1, B_2, Cm2,  Dm2));
                    E_rho = (k_0/2/pi) * sum(dq_simp.* field_AdapterTo_ContinuesFieldFunction('Erho', typeOfCylinder, rho, z, q, p, k_0, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, m,...
                        a_excitation, psi, B_1, B_2, Cm2,  Dm2));
                    H_phi = (k_0/2/pi) * sum(dq_simp.* field_AdapterTo_ContinuesFieldFunction('Hphi', typeOfCylinder, rho, z, q, p, k_0, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, m,...
                        a_excitation, psi, B_1, B_2, Cm2,  Dm2));
                    H_rho = (k_0/2/pi) * sum(dq_simp.* field_AdapterTo_ContinuesFieldFunction('Hrho', typeOfCylinder, rho, z, q, p, k_0, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, m,...
                        a_excitation, psi, B_1, B_2, Cm2,  Dm2));
                end
                S_component = c / (8 * pi) * real(E_rho.* conj(H_phi) -  E_phi.* conj(H_rho));
        end
