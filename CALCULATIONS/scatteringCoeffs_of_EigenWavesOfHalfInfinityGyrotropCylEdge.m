function [b_p_field_1_back,b_p_field_2_back, b_n_back,a_p_Ebeam_forw,a_p_Hbeam_forw] =...
               scatteringCoeffs_of_EigenWavesOfHalfInfinityGyrotropCylEdge(typeOfCylinder,...
               continuousSperctrumCharacters, discreteSperctrumCharacters, waveguideParameters, sourceParameters)

m = sourceParameters.m;
k_0 = sourceParameters.k_0;
p_0 = sourceParameters.p_0;
k = k_0;
L = sourceParameters.zCoordinate;

EE1 = waveguideParameters.EEinner;
GG1 = waveguideParameters.GGinner;
HH1 = waveguideParameters.HHinner;
MU1 = waveguideParameters.MUinner;
EE = waveguideParameters.EEouter;
MU = waveguideParameters.MUouter;
a_0 = waveguideParameters.radius;

dq_simp = continuousSperctrumCharacters.dq_simp;
q = continuousSperctrumCharacters.q;
p = continuousSperctrumCharacters.p;
a_cs_alfa1_forw = continuousSperctrumCharacters.a_cs_alfa1_forw;
a_cs_alfa2_forw = continuousSperctrumCharacters.a_cs_alfa2_forw;

q_n = discreteSperctrumCharacters.q_n;
p_n = discreteSperctrumCharacters.p_n;
a_smn_forw = discreteSperctrumCharacters.a_smn_forw;

EE2 = 1;
MU2 = 1;
z0 = 0;
AE_0 = 0;
AH_0 = 0;

switch(typeOfCylinder)
    case 'Isotropic'
            %%% first type of waves
            psi_forward_1   = psi1_q(k_0, k, a_0, EE1, MU1, EE, MU,  m, -p, q);
            psi_backward_1  = psi1_q(k_0, k, a_0, EE1, MU1, EE, MU, -m,  p, q);
            %%% second type of waves
            psi_forward_2   = psi2_q(k_0, k, a_0, EE1, MU1, EE, MU,  m, -p, q);            
            psi_backward_2  = psi2_q(k_0, k, a_0, EE1, MU1, EE, MU, -m,  p, q);
    case 'Gyrotropic'
            %%% first type of waves
            psi_forward_1   = psi1_q__gyrotropic(k_0, k, a_0, EE1,  GG1, HH1,  m, -p, q);
            psi_backward_1  = psi1_q__gyrotropic(k_0, k, a_0, EE1, -GG1, HH1, -m,  p, q);
            %%% second type of waves            
            psi_forward_2   = psi2_q__gyrotropic(k_0, k, a_0, EE1,  GG1, HH1,  m, -p, q);
            psi_backward_2  = psi2_q__gyrotropic(k_0, k, a_0, EE1, -GG1, HH1, -m,  p, q);
end
      
%  H2m  = besselh(m, 2, k_0.* a_0 * q);
%  dH2m = (H2m * m)./ (k_0.* a_0 * q)  - besselh(m + 1, 2, k_0.* a_0 * q);
%  H1m  = besselh(m, 1, k_0.* a_0 * q);
%  dH1m = (H1m * m)./ (k_0.* a_0 * q)  - besselh(m + 1, 1, k_0.* a_0 * q);
    Q = k.* a_0 * q;
    JmmQ  = besselj(m, Q);
    YmmQ  = bessely(m, Q);
    JMmQ  = besselj(m + 1, Q);
    YMmQ  = bessely(m + 1, Q);
%     %%% необходимо, чтобы при стремлении аргумента функции Ханкеля к бесконечности сама функция была ограниченной  
    H1m  = JmmQ + 1i * YmmQ;
    dH1m = (H1m * m)./ Q  - (JMmQ + 1i * YMmQ);
    H2m  = JmmQ - 1i * YmmQ;
    dH2m = (H2m * m)./ Q  - (JMmQ - 1i * YMmQ);
    
    

 %%%%% here before <<p>> stand plus because waves of waveguide propagation
 %%%%% in back direction of z.
[B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1]  =         coefficientsOfContinuousSpectrum(typeOfCylinder, k_0, k, a_0, EE1, GG1, HH1, MU1, EE, MU, m, -p, q, psi_forward_1, 1);
[B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2]  = coefficientsOfContinuousSpectrum_forPsi2(typeOfCylinder, k_0, k, a_0, EE1, GG1, HH1, MU1, EE, MU, m, -p, q, psi_forward_2, 1);
[B_1_n, B_2_n, Cm2_n, Dm2_n]  = coefficientsOfContinuousSpectrum(typeOfCylinder, k_0, k, a_0, EE1, GG1, HH1, MU1, EE, MU, m, -p_n, q_n, 0, 1);
[B_1_beta1_m, B_2_beta1_m, Cm2_beta1_m, Dm2_beta1_m]  =         coefficientsOfContinuousSpectrum(typeOfCylinder, k_0, k, a_0, EE1, -GG1, HH1, MU1, EE, MU, -m, p, q, psi_backward_1, 1);
[B_1_beta2_m, B_2_beta2_m, Cm2_beta2_m, Dm2_beta2_m]  = coefficientsOfContinuousSpectrum_forPsi2(typeOfCylinder, k_0, k, a_0, EE1, -GG1, HH1, MU1, EE, MU, -m, p, q, psi_backward_2, 1);
[B_1_n_m, B_2_n_m, Cm2_n_m, Dm2_n_m]  = coefficientsOfContinuousSpectrum(typeOfCylinder, k_0, k, a_0, EE1, -GG1, HH1, MU1, EE, MU, -m, p_n, q_n, 0, 1);
 H2m_n  = besselh(m, 2, k_0.* a_0 * q_n);
 dH2m_n = (H2m_n * m)./ (k_0.* a_0 * q_n)  - besselh(m + 1, 2, k_0.* a_0 * q_n);
  q1_n = sqrt(EE1*MU1 - p_n.^2);
 Jtmq1_n    = besselj(m  , k_0.* a_0* q1_n);
 Jtm_1q1_n  = besselj(m-1, k_0.* a_0* q1_n);
 Jtmpl1q1_n = besselj(m+1, k_0.* a_0* q1_n);
 Jtmpl2q1_n = besselj(m+2, k_0.* a_0* q1_n); 

             
%            K_beta1Min_alph0PL =...
%                 K_core(typeOfCylinder, q, -p, psi_forward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                        q_0, p_0, m,...
%                        k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                        B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, AE_0, 0) +...
%                 K_core(typeOfCylinder, q, -p, psi_forward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                        q_0, p_0, m,...
%                        k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                        B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 0, AH_0);
%                 
%            K_beta2Min_alph0PL =...
%                  K_core(typeOfCylinder, q, -p, psi_forward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                         q_0, p_0, m,...
%                         k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                         B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, AE_0, 0) +...
%                  K_core(typeOfCylinder, q, -p, psi_forward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                         q_0, p_0, m,...
%                         k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                         B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 0, AH_0);
%                     
%            K_nMin_alph0PL =...
%                (K_core(typeOfCylinder, q_n, -p_n, 0, -m, (-1)^m*H2m_n, (-1)^m*dH2m_n, 0, 0,...
%                         q_0, p_0, m,...
%                         k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                         B_1_n, B_2_n, Cm2_n, Dm2_n, AE_0, 0) +...
%                  K_core(typeOfCylinder, q_n, -p_n, 0, -m, (-1)^m*H2m_n, (-1)^m*dH2m_n, 0, 0,...
%                         q_0, p_0, m,...
%                         k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                         B_1_n, B_2_n, Cm2_n, Dm2_n, 0, AH_0));
                    
                    

%%%%%%%%%%%%%%%%% kores of integral equations %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
K_beta1PL_alphEMin = zeros(size(q,2),size(q,2));
K_beta2PL_alphEMin = zeros(size(q,2),size(q,2));
K_beta1PL_alphHMin = zeros(size(q,2),size(q,2));
K_beta2PL_alphHMin = zeros(size(q,2),size(q,2));
K_beta1Min_alphEMin = zeros(size(q,2),size(q,2));
K_beta1Min_alphHMin = zeros(size(q,2),size(q,2));
K_beta2Min_alphEMin = zeros(size(q,2),size(q,2));
K_beta2Min_alphHMin = zeros(size(q,2),size(q,2));

K_beta1PL_alphEPL = zeros(size(q,2),size(q,2));
K_beta1PL_alphHPL = zeros(size(q,2),size(q,2));
K_beta2PL_alphEPL = zeros(size(q,2),size(q,2));
K_beta2PL_alphHPL = zeros(size(q,2),size(q,2));
switch(typeOfCylinder)
        case 'Isotropic'
                q1 = sqrt(EE1*MU1 - p.^2);
                Jtmq1    = besselj(-m  , k_0.* a_0* q1);
                Jtm_1q1  = besselj(-m-1, k_0.* a_0* q1);
                Jtmpl1q1 = besselj(-m+1, k_0.* a_0* q1);
                Jtmpl2q1 = besselj(-m+2, k_0.* a_0* q1);
                Jtmq1_pl    = besselj(m  , k_0.* a_0* q1);
                Jtm_1q1_pl  = besselj(m-1, k_0.* a_0* q1);
                Jtmpl1q1_pl = besselj(m+1, k_0.* a_0* q1);
                Jtmpl2q1_pl = besselj(m+2, k_0.* a_0* q1);
                Jtmtq    = besselj(m  , k_0.* a_0* q);
                Jtmpl1tq = besselj(m+1, k_0.* a_0* q);
                Jtm_1tq  = besselj(m-1, k_0.* a_0* q);
                Jtmpl2tq = besselj(m+2, k_0.* a_0* q);
                Jtmtq_min    = besselj(-m  , k_0.* a_0* q);
                Jtmpl1tq_min = besselj(-m+1, k_0.* a_0* q);
                Jtm_1tq_min  = besselj(-m-1, k_0.* a_0* q);
                Jtmpl2tq_min = besselj(-m+2, k_0.* a_0* q);
            for iq = 1:size(q,2)

%                 
%                 K_beta1PL_alphEMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, p, psi_forward_1, m, H2m, dH2m, H1m, dH1m,...
%                                                  q(iq), p(iq), -m,...
%                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 1, 0,...
%                                                  Jtmtq_min(iq),Jtmpl1tq_min(iq), Jtm_1tq_min(iq), Jtmpl2tq_min(iq),...
%                                                  Jtmq1, Jtm_1q1, Jtmpl1q1, Jtmpl2q1);
%                 K_beta2PL_alphEMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, p, psi_forward_2, m, H2m, dH2m, H1m, dH1m,...
%                                                  q(iq), p(iq), -m,...
%                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 1, 0,...
%                                                  Jtmtq_min(iq),Jtmpl1tq_min(iq), Jtm_1tq_min(iq), Jtmpl2tq_min(iq),...
%                                                  Jtmq1, Jtm_1q1, Jtmpl1q1, Jtmpl2q1);
%                 K_beta1PL_alphHMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, p, psi_forward_1, m, H2m, dH2m, H1m, dH1m,...
%                                                  q(iq), p(iq), -m,...
%                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 0, 1,...
%                                                  Jtmtq_min(iq),Jtmpl1tq_min(iq), Jtm_1tq_min(iq), Jtmpl2tq_min(iq),...
%                                                  Jtmq1, Jtm_1q1, Jtmpl1q1, Jtmpl2q1);
%                 K_beta2PL_alphHMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, p, psi_forward_2, m, H2m, dH2m, H1m, dH1m,...
%                                                  q(iq), p(iq), -m,...
%                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 0, 1,...
%                                                  Jtmtq_min(iq),Jtmpl1tq_min(iq), Jtm_1tq_min(iq), Jtmpl2tq_min(iq),...
%                                                  Jtmq1, Jtm_1q1, Jtmpl1q1, Jtmpl2q1);

                
                K_beta1Min_alphEMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, -p, psi_forward_1, m, H2m, dH2m, H1m, dH1m,...
                                                 q(iq), -p(iq), -m,...
                                                 k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                                                 B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 1, 0,...
                                                 Jtmtq_min(iq),Jtmpl1tq_min(iq), Jtm_1tq_min(iq), Jtmpl2tq_min(iq),...
                                                 Jtmq1, Jtm_1q1, Jtmpl1q1, Jtmpl2q1);
                K_beta2Min_alphEMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, -p, psi_forward_2, m, H2m, dH2m, H1m, dH1m,...
                                                 q(iq), -p(iq), -m,...
                                                 k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                                                 B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 1, 0,...
                                                 Jtmtq_min(iq),Jtmpl1tq_min(iq), Jtm_1tq_min(iq), Jtmpl2tq_min(iq),...
                                                 Jtmq1, Jtm_1q1, Jtmpl1q1, Jtmpl2q1);
                K_beta1Min_alphHMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, -p, psi_forward_1, m, H2m, dH2m, H1m, dH1m,...
                                                 q(iq), -p(iq), -m,...
                                                 k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                                                 B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 0, 1,...
                                                 Jtmtq_min(iq),Jtmpl1tq_min(iq), Jtm_1tq_min(iq), Jtmpl2tq_min(iq),...
                                                 Jtmq1, Jtm_1q1, Jtmpl1q1, Jtmpl2q1);
                K_beta2Min_alphHMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, -p, psi_forward_2, m, H2m, dH2m, H1m, dH1m,...
                                                 q(iq), -p(iq), -m,...
                                                 k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                                                 B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 0, 1,...
                                                 Jtmtq_min(iq),Jtmpl1tq_min(iq), Jtm_1tq_min(iq), Jtmpl2tq_min(iq),...
                                                 Jtmq1, Jtm_1q1, Jtmpl1q1, Jtmpl2q1);
                                             
%                 K_beta1Min_alphEMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, -p, psi_forward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                                                  q(iq), -p(iq), m,...
%                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 1, 0,...
%                                                  Jtmtq(iq),Jtmpl1tq(iq), Jtm_1tq(iq), Jtmpl2tq(iq),...
%                                                  Jtmq1_pl, Jtm_1q1_pl, Jtmpl1q1_pl, Jtmpl2q1_pl);
%                 K_beta1Min_alphHMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, -p, psi_forward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                                                  q(iq), -p(iq), m,...
%                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 0, 1,...
%                                                  Jtmtq(iq),Jtmpl1tq(iq), Jtm_1tq(iq), Jtmpl2tq(iq),...
%                                                  Jtmq1_pl, Jtm_1q1_pl, Jtmpl1q1_pl, Jtmpl2q1_pl);
%                 K_beta2Min_alphEMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, -p, psi_forward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                                                  q(iq), -p(iq), m,...
%                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 1, 0,...
%                                                  Jtmtq(iq),Jtmpl1tq(iq), Jtm_1tq(iq), Jtmpl2tq(iq),...
%                                                  Jtmq1_pl, Jtm_1q1_pl, Jtmpl1q1_pl, Jtmpl2q1_pl);
%                 K_beta2Min_alphHMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, -p, psi_forward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                                                  q(iq), -p(iq), m,...
%                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 0, 1,...
%                                                  Jtmtq(iq),Jtmpl1tq(iq), Jtm_1tq(iq), Jtmpl2tq(iq),...
%                                                  Jtmq1_pl, Jtm_1q1_pl, Jtmpl1q1_pl, Jtmpl2q1_pl);
                                             

                                             
                K_beta1PL_alphEPL(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, p, psi_backward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
                                                 q(iq), p(iq), m,...
                                                 k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                                                 B_1_beta1_m, B_2_beta1_m, Cm2_beta1_m, Dm2_beta1_m, 1, 0,...
                                                 Jtmtq(iq),Jtmpl1tq(iq), Jtm_1tq(iq), Jtmpl2tq(iq),...
                                                 Jtmq1_pl, Jtm_1q1_pl, Jtmpl1q1_pl, Jtmpl2q1_pl);
                K_beta1PL_alphHPL(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, p, psi_backward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
                                                 q(iq), p(iq), m,...
                                                 k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                                                 B_1_beta1_m, B_2_beta1_m, Cm2_beta1_m, Dm2_beta1_m, 0, 1,...
                                                 Jtmtq(iq),Jtmpl1tq(iq), Jtm_1tq(iq), Jtmpl2tq(iq),...
                                                 Jtmq1_pl, Jtm_1q1_pl, Jtmpl1q1_pl, Jtmpl2q1_pl);
                K_beta2PL_alphEPL(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, p, psi_backward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
                                                 q(iq), p(iq), m,...
                                                 k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                                                 B_1_beta2_m, B_2_beta2_m, Cm2_beta2_m, Dm2_beta2_m, 1, 0,...
                                                 Jtmtq(iq),Jtmpl1tq(iq), Jtm_1tq(iq), Jtmpl2tq(iq),...
                                                 Jtmq1_pl, Jtm_1q1_pl, Jtmpl1q1_pl, Jtmpl2q1_pl);
                K_beta2PL_alphHPL(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, p, psi_backward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
                                                 q(iq), p(iq), m,...
                                                 k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                                                 B_1_beta2_m, B_2_beta2_m, Cm2_beta2_m, Dm2_beta2_m, 0, 1,...
                                                 Jtmtq(iq),Jtmpl1tq(iq), Jtm_1tq(iq), Jtmpl2tq(iq),...
                                                 Jtmq1_pl, Jtm_1q1_pl, Jtmpl1q1_pl, Jtmpl2q1_pl);
            end

        case 'Gyrotropic'
            
            [q1, q2, n1, n2, alp1, alp2, bet1, bet2] = term_of_gyrotropic_waveguide(EE1, GG1, HH1, -p);
            JM0    = besselj(m+1, (q.* a_0).* k_0);                            
            JM1    = besselj(m+1, (q1.* a_0).* k_0);
            JM2    = besselj(m+1, (q2.* a_0).* k_0);
            JMM0   = besselj(m+2, (q.* a_0).* k_0);
            JMM1   = besselj(m+2, (q1.* a_0).* k_0);
            JMM2   = besselj(m+2, (q2.* a_0).* k_0);            
            Jm0    = besselj(m, (q.* a_0).* k_0);
            Jm1    = besselj(m, (q1.* a_0).* k_0);
            Jm2    = besselj(m, (q2.* a_0).* k_0);
                %%%% vary larger JM1 and Jm1
            JMM1(abs(imag(q1.* a_0.* k_0))>300) = besselj(m+2, 1i*300);
            JM1(abs(imag(q1.* a_0.* k_0))>300) = besselj(m+1, 1i*300);
            Jm1(abs(imag(q1.* a_0.* k_0))>300) = besselj(m,   1i*300);
            
            [q1_min, q2_min, n1_min, n2_min, alp1_min, alp2_min, bet1_min, bet2_min] = term_of_gyrotropic_waveguide(EE1, -GG1, HH1, p);
            JM0_min    = besselj(-m+1, (q.* a_0).* k_0);                            
            JM1_min    = besselj(-m+1, (q1_min.* a_0).* k_0);
            JM2_min    = besselj(-m+1, (q2_min.* a_0).* k_0);
            JMM0_min   = besselj(-m+2, (q.* a_0).* k_0);
            JMM1_min   = besselj(-m+2, (q1_min.* a_0).* k_0);
            JMM2_min   = besselj(-m+2, (q2_min.* a_0).* k_0);
            Jm0_min    = besselj(-m, (q.* a_0).* k_0);
            Jm1_min    = besselj(-m, (q1_min.* a_0).* k_0);
            Jm2_min    = besselj(-m, (q2_min.* a_0).* k_0);
                %%%% vary larger JM1 and Jm1
            JMM1_min(abs(imag(q1_min.* a_0.* k_0))>300) = besselj(m+2, 1i*300);
            JM1_min(abs(imag(q1_min.* a_0.* k_0))>300) = besselj(m+1, 1i*300);
            Jm1_min(abs(imag(q1_min.* a_0.* k_0))>300) = besselj(m,   1i*300);
            for iq = 1:size(q,2)
%                 K_beta1PL_alphEMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, p, psi_forward_1, m, H2m, dH2m, H1m, dH1m,...
%                                                  q(iq), p(iq), -m,...
%                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 1, 0,...
%                                                  0,0, 0, 0,...
%                                                  0, 0, 0, 0,...
%                                                  JM0(iq),JM1,JM2,JMM0(iq),JMM1,JMM2,Jm0(iq),Jm1,Jm2,...
%                                                  q1, q2, n1, n2, alp1, alp2, bet1, bet2);
%                 K_beta2PL_alphEMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, p, psi_forward_2, m, H2m, dH2m, H1m, dH1m,...
%                                                  q(iq), p(iq), -m,...
%                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 1, 0,...
%                                                  0,0, 0, 0,...
%                                                  0, 0, 0, 0,...
%                                                  JM0(iq),JM1,JM2,JMM0(iq),JMM1,JMM2,Jm0(iq),Jm1,Jm2,...
%                                                  q1, q2, n1, n2, alp1, alp2, bet1, bet2);
%                 K_beta1PL_alphHMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, p, psi_forward_1, m, H2m, dH2m, H1m, dH1m,...
%                                                  q(iq), p(iq), -m,...
%                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 0, 1,...
%                                                  0,0, 0, 0,...
%                                                  0, 0, 0, 0,...
%                                                  JM0(iq),JM1,JM2,JMM0(iq),JMM1,JMM2,Jm0(iq),Jm1,Jm2,...
%                                                  q1, q2, n1, n2, alp1, alp2, bet1, bet2);
%                 K_beta2PL_alphHMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, p, psi_forward_2, m, H2m, dH2m, H1m, dH1m,...
%                                                  q(iq), p(iq), -m,...
%                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 0, 1,...
%                                                  0,0, 0, 0,...
%                                                  0, 0, 0, 0,...
%                                                  JM0(iq),JM1,JM2,JMM0(iq),JMM1,JMM2,Jm0(iq),Jm1,Jm2,...
%                                                  q1, q2, n1, n2, alp1, alp2, bet1, bet2);                                             
                
                K_beta1Min_alphEMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, -p, psi_forward_1, m, H2m, dH2m, H1m, dH1m,...
                                                 q(iq), -p(iq), -m,...
                                                 k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                                                 B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 1, 0,...
                                                 0,0, 0, 0,...
                                                 0, 0, 0, 0,...
                                                 JM0(iq),JM1,JM2,JMM0(iq),JMM1,JMM2,Jm0(iq),Jm1,Jm2,...
                                                 q1, q2, n1, n2, alp1, alp2, bet1, bet2);
                K_beta2Min_alphEMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, -p, psi_forward_2, m, H2m, dH2m, H1m, dH1m,...
                                                 q(iq), -p(iq), -m,...
                                                 k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                                                 B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 1, 0,...
                                                 0,0, 0, 0,...
                                                 0, 0, 0, 0,...
                                                 JM0(iq),JM1,JM2,JMM0(iq),JMM1,JMM2,Jm0(iq),Jm1,Jm2,...
                                                 q1, q2, n1, n2, alp1, alp2, bet1, bet2);
                K_beta1Min_alphHMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, -p, psi_forward_1, m, H2m, dH2m, H1m, dH1m,...
                                                 q(iq), -p(iq), -m,...
                                                 k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                                                 B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 0, 1,...
                                                 0,0, 0, 0,...
                                                 0, 0, 0, 0,...
                                                 JM0(iq),JM1,JM2,JMM0(iq),JMM1,JMM2,Jm0(iq),Jm1,Jm2,...
                                                 q1, q2, n1, n2, alp1, alp2, bet1, bet2);
                K_beta2Min_alphHMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, -p, psi_forward_2, m, H2m, dH2m, H1m, dH1m,...
                                                 q(iq), -p(iq), -m,...
                                                 k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                                                 B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 0, 1,...
                                                 0,0, 0, 0,...
                                                 0, 0, 0, 0,...
                                                 JM0(iq),JM1,JM2,JMM0(iq),JMM1,JMM2,Jm0(iq),Jm1,Jm2,...
                                                 q1, q2, n1, n2, alp1, alp2, bet1, bet2);                                             
                                             
                                             
                                             
%                 K_beta1Min_alphEMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, -p, psi_forward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                                                  q(iq), -p(iq), m,...
%                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 1, 0,...
%                                                  0,0, 0, 0,...
%                                                  0, 0, 0, 0,...
%                                                  JM0_min(iq),JM1_min,JM2_min,JMM0_min(iq),JMM1_min,JMM2_min,Jm0_min(iq),Jm1_min,Jm2_min,...
%                                                  q1_min, q2_min, n1_min, n2_min, alp1_min, alp2_min, bet1_min, bet2_min);
%                 K_beta1Min_alphHMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, -p, psi_forward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                                                  q(iq), -p(iq), m,...
%                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 0, 1,...
%                                                  0,0, 0, 0,...
%                                                  0, 0, 0, 0,...
%                                                  JM0_min(iq),JM1_min,JM2_min,JMM0_min(iq),JMM1_min,JMM2_min,Jm0_min(iq),Jm1_min,Jm2_min,...
%                                                  q1_min, q2_min, n1_min, n2_min, alp1_min, alp2_min, bet1_min, bet2_min);
%                 K_beta2Min_alphEMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, -p, psi_forward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                                                  q(iq), -p(iq), m,...
%                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 1, 0,...
%                                                  0,0, 0, 0,...
%                                                  0, 0, 0, 0,...
%                                                  JM0_min(iq),JM1_min,JM2_min,JMM0_min(iq),JMM1_min,JMM2_min,Jm0_min(iq),Jm1_min,Jm2_min,...
%                                                  q1_min, q2_min, n1_min, n2_min, alp1_min, alp2_min, bet1_min, bet2_min);
%                 K_beta2Min_alphHMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, -p, psi_forward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                                                  q(iq), -p(iq), m,...
%                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 0, 1,...
%                                                  0,0, 0, 0,...
%                                                  0, 0, 0, 0,...
%                                                  JM0_min(iq),JM1_min,JM2_min,JMM0_min(iq),JMM1_min,JMM2_min,Jm0_min(iq),Jm1_min,Jm2_min,...
%                                                  q1_min, q2_min, n1_min, n2_min, alp1_min, alp2_min, bet1_min, bet2_min);
                                             
                                             
                K_beta1PL_alphEPL(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, p, psi_backward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
                                                 q(iq), p(iq), m,...
                                                 k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                                                 B_1_beta1_m, B_2_beta1_m, Cm2_beta1_m, Dm2_beta1_m, 1, 0,...
                                                 0,0, 0, 0,...
                                                 0, 0, 0, 0,...
                                                 JM0_min(iq),JM1_min,JM2_min,JMM0_min(iq),JMM1_min,JMM2_min,Jm0_min(iq),Jm1_min,Jm2_min,...
                                                 q1_min, q2_min, n1_min, n2_min, alp1_min, alp2_min, bet1_min, bet2_min);
                K_beta1PL_alphHPL(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, p, psi_backward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
                                                 q(iq), p(iq), m,...
                                                 k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                                                 B_1_beta1_m, B_2_beta1_m, Cm2_beta1_m, Dm2_beta1_m, 0, 1,...
                                                 0,0, 0, 0,...
                                                 0, 0, 0, 0,...
                                                 JM0_min(iq),JM1_min,JM2_min,JMM0_min(iq),JMM1_min,JMM2_min,Jm0_min(iq),Jm1_min,Jm2_min,...
                                                 q1_min, q2_min, n1_min, n2_min, alp1_min, alp2_min, bet1_min, bet2_min);
                K_beta2PL_alphEPL(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, p, psi_backward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
                                                 q(iq), p(iq), m,...
                                                 k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                                                 B_1_beta2_m, B_2_beta2_m, Cm2_beta2_m, Dm2_beta2_m, 1, 0,...
                                                 0,0, 0, 0,...
                                                 0, 0, 0, 0,...
                                                 JM0_min(iq),JM1_min,JM2_min,JMM0_min(iq),JMM1_min,JMM2_min,Jm0_min(iq),Jm1_min,Jm2_min,...
                                                 q1_min, q2_min, n1_min, n2_min, alp1_min, alp2_min, bet1_min, bet2_min);
                K_beta2PL_alphHPL(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, p, psi_backward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
                                                 q(iq), p(iq), m,...
                                                 k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                                                 B_1_beta2_m, B_2_beta2_m, Cm2_beta2_m, Dm2_beta2_m, 0, 1,...
                                                 0,0, 0, 0,...
                                                 0, 0, 0, 0,...
                                                 JM0_min(iq),JM1_min,JM2_min,JMM0_min(iq),JMM1_min,JMM2_min,Jm0_min(iq),Jm1_min,Jm2_min,...
                                                 q1_min, q2_min, n1_min, n2_min, alp1_min, alp2_min, bet1_min, bet2_min);
            end

end


%%%%%%%%%%%%%%%%%%% right sides of system for eigenwaveguide
N_p_beta_des = [];
for in = 1:size(q_n,1)
    N_p_beta_des(in,1) = Norm_of_descreteMode(typeOfCylinder, q_n(in), -p_n(in), k_0, a_0, EE1, GG1, HH1, MU1, EE, MU, m);
end
c = 3e10;
N_p_beta_des = N_p_beta_des / (c / 2);
 
K_beta0PL_alphEMin = zeros(1,size(q,2));
K_beta0PL_alphHMin = zeros(1,size(q,2));
%%%%%%%%%%%%%%%% right side which formed by eigenmodes %%%%%%%%%%%%%%%%%%%%
for iqn = 1:size(q_n,1) 
    H2m0  = besselh(m, 2, k_0.* a_0 * q_n(iqn));
    dH2m0 = (H2m0 * m)./ (k_0.* a_0 * q_n(iqn))  - besselh(m + 1, 2, k_0.* a_0 * q_n(iqn));
    H1m0  = besselh(m, 1, k_0.* a_0 * q_n(iqn));
    dH1m0 = (H1m0 * m)./ (k_0.* a_0 * q_n(iqn))  - besselh(m + 1, 1, k_0.* a_0 * q_n(iqn));
    %%%%%% singular wave in waveguide
    [b_p_1_delta_forw, b_p_2_delta_forw, psi_delta_1, psi_delta_2,...
        B_1_delta_1,B_2_delta_1,Cm2_delta_1,  Dm2_delta_1,...
        B_1_delta_2,B_2_delta_2,Cm2_delta_2,  Dm2_delta_2] = coefficientsOf_deltaFunctionWave(typeOfCylinder, q_n(iqn), p_n(iqn), k_0, k_0, a_0, EE1, GG1, HH1, MU1, EE, MU, m, AE_0, AH_0);
    
    
    K_beta0PL_alphEMin = K_beta0PL_alphEMin +...
                     -(q.* K_core(typeOfCylinder, q_n(iqn), p_n(iqn), psi_delta_1, m, H2m0, dH2m0, H1m0, dH1m0,...
                           q, -p, -m,...
                           k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                           B_1_delta_1,B_2_delta_1,Cm2_delta_1, Dm2_delta_1, 1, 0).* b_p_1_delta_forw +...
                       q.* K_core(typeOfCylinder, q_n(iqn), p_n(iqn), psi_delta_2, m, H2m0, dH2m0, H1m0, dH1m0,...
                           q, -p, -m,...
                           k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                           B_1_delta_2,B_2_delta_2,Cm2_delta_2, Dm2_delta_2, 1, 0).* b_p_2_delta_forw).*...
                           a_smn_forw(iqn).* exp(1i * k_0 * p_n(iqn) * L);

   K_beta0PL_alphHMin = K_beta0PL_alphHMin +...
                     -(q.* K_core(typeOfCylinder, q_n(iqn), p_n(iqn), psi_delta_1, m, H2m0, dH2m0, H1m0, dH1m0,...
                           q, -p, -m,...
                           k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                           B_1_delta_1,B_2_delta_1,Cm2_delta_1, Dm2_delta_1, 0, 1).* b_p_1_delta_forw +...
                       q.* K_core(typeOfCylinder, q_n(iqn), p_n(iqn), psi_delta_2, m, H2m0, dH2m0, H1m0, dH1m0,...
                           q, -p, -m,...
                           k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                           B_1_delta_2,B_2_delta_2,Cm2_delta_2, Dm2_delta_2, 0, 1).* b_p_2_delta_forw).*...
                           a_smn_forw(iqn).* exp(1i * k_0 * p_n(iqn) * L);
end

Nmax = size(q,2);
Nd = [1:Nmax];
%%%%%%%%%%%%%%%% right side which formed by continues spectrum eigenwaves %%%%%%%%%%%%%%%%%%%%
for iq = 1:size(q,2) 
    H2m0  = besselh(m, 2, k_0.* a_0 * q(iq));
    dH2m0 = (H2m0 * m)./ (k_0.* a_0 * q(iq))  - besselh(m + 1, 2, k_0.* a_0 * q(iq));
    H1m0  = besselh(m, 1, k_0.* a_0 * q(iq));
    dH1m0 = (H1m0 * m)./ (k_0.* a_0 * q(iq))  - besselh(m + 1, 1, k_0.* a_0 * q(iq));
    %%%%%% singular wave in waveguide
    [b_p_1_delta_forw, b_p_2_delta_forw, psi_delta_1, psi_delta_2,...
        B_1_delta_1,B_2_delta_1,Cm2_delta_1,  Dm2_delta_1,...
        B_1_delta_2,B_2_delta_2,Cm2_delta_2,  Dm2_delta_2] = coefficientsOf_deltaFunctionWave(typeOfCylinder, q(iq), p(iq), k_0, k_0, a_0, EE1, GG1, HH1, MU1, EE, MU, m, AE_0, AH_0);
    
    tNd = Nd(Nd~=iq);
    
    K_beta0PL_alphEMin(tNd) = K_beta0PL_alphEMin(tNd) +...
                     -k_0/2/pi *...
                      (q(tNd).* K_core(typeOfCylinder, q(iq), p(iq), psi_delta_1, m, H2m0, dH2m0, H1m0, dH1m0,...
                           q(tNd), -p(tNd), -m,...
                           k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                           B_1_delta_1,B_2_delta_1,Cm2_delta_1, Dm2_delta_1, 1, 0).* a_cs_alfa1_forw(iq) +...
                       q(tNd).* K_core(typeOfCylinder, q(iq), p(iq), psi_delta_2, m, H2m0, dH2m0, H1m0, dH1m0,...
                           q(tNd), -p(tNd), -m,...
                           k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                           B_1_delta_2,B_2_delta_2,Cm2_delta_2, Dm2_delta_2, 1, 0).* a_cs_alfa2_forw(iq)).*...
                           exp(1i * k_0 * p(iq) * L).* dq_simp(iq);

   K_beta0PL_alphHMin(tNd) = K_beta0PL_alphHMin(tNd) +...
                     -k_0/2/pi *...
                      (q(tNd).* K_core(typeOfCylinder, q(iq), p(iq), psi_delta_1, m, H2m0, dH2m0, H1m0, dH1m0,...
                           q(tNd), -p(tNd), -m,...
                           k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                           B_1_delta_1,B_2_delta_1,Cm2_delta_1, Dm2_delta_1, 0, 1).* a_cs_alfa1_forw(iq) +...
                       q(tNd).* K_core(typeOfCylinder, q(iq), p(iq), psi_delta_2, m, H2m0, dH2m0, H1m0, dH1m0,...
                           q(tNd), -p(tNd), -m,...
                           k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                           B_1_delta_2,B_2_delta_2,Cm2_delta_2, Dm2_delta_2, 0, 1).* a_cs_alfa2_forw(iq)).*...
                           exp(1i * k_0 * p(iq) * L).* dq_simp(iq);
end
                       
q_0 = 1i* 10;
p_0 = 10;
% %%%%%% singular wave in free space
% [a_p_field_delta_Ewave_forw, a_p_field_delta_Hwave_forw] = coefficientsOf_deltaFunctionWaveOfFreeSpace(typeOfCylinder, q_0, p_0,...
%     k_0, k_0, a_0, EE1, GG1, HH1, MU1, EE, MU, m,...
%     b_p_1_delta_forw, b_p_2_delta_forw, psi_delta_1, psi_delta_2,...
%     Cm2_delta_1,  Dm2_delta_1, Cm2_delta_2,  Dm2_delta_2);


%%%%%%%%%%% forming of marix for search the excitation coeff %%%%%%%%%%%%%%
%%%%%%%%%%% For waveguide part %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Nmax = size(q,2); 
    bNmax = 2*Nmax + size(q_n,1); 
   matrix = zeros(4*Nmax + size(q_n,1), 4*Nmax + size(q_n,1));
rightSide = zeros(4*Nmax + size(q_n,1),1);

Aj = dq_simp;
for ibeta = 1:2
    for iq = 1:Nmax
        if(ibeta == 1)
            psi_beta = psi_forward_1(iq);
            Cm2_beta = Cm2_beta1(iq);
            Dm2_beta = Dm2_beta1(iq);
            
            N_p_beta1(iq) = -(-1)^m * (16 * pi / k_0^2) * (-p(iq)./ q(iq)).* (Cm2_beta.^2 + Dm2_beta.^2).* psi_beta;
            matrix(iq,iq) = matrix(iq,iq) + k_0/2/pi * N_p_beta1(iq);
                               
            matrix(iq, [1:Nmax] + bNmax)        = matrix(iq, [1:Nmax] + bNmax) +...
                - k_0/2/pi * Aj.* K_beta1PL_alphEPL(:,iq).';
            
            matrix(iq, [1:Nmax] + Nmax + bNmax) = matrix(iq, [1:Nmax] + Nmax + bNmax) +...
                - k_0/2/pi * Aj.* K_beta1PL_alphHPL(:,iq).';
                  
        elseif(ibeta == 2)
            psi_beta = psi_forward_2(iq);
            Cm2_beta = Cm2_beta2(iq);
            Dm2_beta = Dm2_beta2(iq);
            
            N_p_beta2(iq) = -(-1)^m * (16 * pi / k_0^2) * (-p(iq)./ q(iq)).* (Cm2_beta.^2 + Dm2_beta.^2).* psi_beta;
            matrix(iq + Nmax,iq + Nmax) = matrix(iq + Nmax,iq + Nmax) + k_0/2/pi * N_p_beta2(iq);
                                      
            matrix(iq + Nmax, [1:Nmax] + bNmax)        = matrix(iq + Nmax, [1:Nmax] + bNmax) +...
                - k_0/2/pi * Aj.* K_beta2PL_alphEPL(:,iq).';
            
            matrix(iq + Nmax, [1:Nmax] + Nmax + bNmax) = matrix(iq + Nmax, [1:Nmax] + Nmax + bNmax) +...
                - k_0/2/pi * Aj.* K_beta2PL_alphHPL(:,iq).';
        end

        
%         if(ibeta == 1)
%             rightSide(iq) = rightSide(iq)+...
%                   k_0/2/pi * q_0.*...
%                  (K_core(typeOfCylinder, q(iq), p(iq), psi_backward_1(iq), -m, (-1)^m*H2m(iq), (-1)^m*dH2m(iq), (-1)^m*H1m(iq), (-1)^m*dH1m(iq),...
%                        q_0, p_0, m,...
%                        k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                        B_1_beta1_m(iq), B_2_beta1_m(iq), Cm2_beta1_m(iq), Dm2_beta1_m(iq), 1, 0).*...
%                        a_p_field_delta_Ewave_forw +...
%                   K_core(typeOfCylinder, q(iq), p(iq), psi_backward_1(iq), -m, (-1)^m*H2m(iq), (-1)^m*dH2m(iq), (-1)^m*H1m(iq), (-1)^m*dH1m(iq),...
%                        q_0, p_0, m,...
%                        k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                        B_1_beta1_m(iq), B_2_beta1_m(iq), Cm2_beta1_m(iq), Dm2_beta1_m(iq), 0, 1).*...
%                        a_p_field_delta_Hwave_forw);
%           elseif(ibeta == 2)
%               rightSide(iq + Nmax) = rightSide(iq + Nmax)+...
%                  k_0/2/pi * q_0.*...
%                  (K_core(typeOfCylinder, q(iq), p(iq), psi_backward_2(iq), -m, (-1)^m*H2m(iq), (-1)^m*dH2m(iq), (-1)^m*H1m(iq), (-1)^m*dH1m(iq),...
%                        q_0, p_0, m,...
%                        k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                        B_1_beta2_m(iq), B_2_beta2_m(iq), Cm2_beta2_m(iq), Dm2_beta2_m(iq), 1, 0).*...
%                        a_p_field_delta_Ewave_forw +...
%                   K_core(typeOfCylinder, q(iq), p(iq), psi_backward_2(iq), -m, (-1)^m*H2m(iq), (-1)^m*dH2m(iq), (-1)^m*H1m(iq), (-1)^m*dH1m(iq),...
%                        q_0, p_0, m,...
%                        k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                        B_1_beta2_m(iq), B_2_beta2_m(iq), Cm2_beta2_m(iq), Dm2_beta2_m(iq), 0, 1).*...
%                        a_p_field_delta_Hwave_forw);
%         end
    end
%         if(ibeta == 1)
%             rightSide([1:Nmax]) = rightSide([1:Nmax])+...
%                   k_0/2/pi * q_0.*...
%                  (K_core(typeOfCylinder, q, p, psi_backward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                        q_0, p_0, m,...
%                        k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                        B_1_beta1_m, B_2_beta1_m, Cm2_beta1_m, Dm2_beta1_m, 1, 0).*...
%                        a_p_field_delta_Ewave_forw +...
%                   K_core(typeOfCylinder, q, p, psi_backward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                        q_0, p_0, m,...
%                        k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                        B_1_beta1_m, B_2_beta1_m, Cm2_beta1_m, Dm2_beta1_m, 0, 1).*...
%                        a_p_field_delta_Hwave_forw).';
%         elseif(ibeta == 2)
%               rightSide([1:Nmax] + Nmax) = rightSide([1:Nmax] + Nmax)+...
%                  k_0/2/pi * q_0.*...
%                  (K_core(typeOfCylinder, q, p, psi_backward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                        q_0, p_0, m,...
%                        k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                        B_1_beta2_m, B_2_beta2_m, Cm2_beta2_m, Dm2_beta2_m, 1, 0).*...
%                        a_p_field_delta_Ewave_forw +...
%                   K_core(typeOfCylinder, q, p, psi_backward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                        q_0, p_0, m,...
%                        k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                        B_1_beta2_m, B_2_beta2_m, Cm2_beta2_m, Dm2_beta2_m, 0, 1).*...
%                        a_p_field_delta_Hwave_forw).';
%         end
end

%%%%%%%%%%%%%%%%%%% add discrete modes %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 for in = 1:size(q_n,1)
        matrix(in + 2*Nmax, in + 2*Nmax) = matrix(in + 2*Nmax, in + 2*Nmax) + (2 * pi) * N_p_beta_des(in); %%%% full norm of eigenwaves
        
        matrix(in + 2*Nmax, [1:Nmax] + bNmax) = matrix(in + 2*Nmax, [1:Nmax] + bNmax) +...
                - k_0/2/pi * Aj.* q.*...
                  K_core(typeOfCylinder, q_n(in), p_n(in), 0, -m, (-1)^m*H2m_n(in), (-1)^m*dH2m_n(in), 0, 0,...
                                                 q, p, m,...
                                                 k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                                                 B_1_n_m(in), B_2_n_m(in), Cm2_n_m(in), Dm2_n_m(in), 1, 0);
            
        matrix(in + 2*Nmax, [1:Nmax] + Nmax + bNmax) = matrix(in + 2*Nmax, [1:Nmax] + Nmax + bNmax) +...
                - k_0/2/pi * Aj.* q.*...
                  K_core(typeOfCylinder, q_n(in), p_n(in), 0, -m, (-1)^m*H2m_n(in), (-1)^m*dH2m_n(in), 0, 0,...
                                                 q, p, m,...
                                                 k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                                                 B_1_n_m(in), B_2_n_m(in), Cm2_n_m(in), Dm2_n_m(in), 0, 1);


%          rightSide(in + 2*Nmax) = rightSide(in + 2*Nmax) +...
%                   k_0/2/pi * q_0.*...
%                  (K_core(typeOfCylinder, q_n(in), p_n(in), 0, -m, (-1)^m*H2m_n(in), (-1)^m*dH2m_n(in), 0, 0,...
%                        q_0, p_0, m,...
%                        k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                        B_1_n_m(in), B_2_n_m(in), Cm2_n_m(in), Dm2_n_m(in), 1, 0).*...
%                        a_p_field_delta_Ewave_forw +...
%                   K_core(typeOfCylinder, q_n(in), p_n(in), 0, -m, (-1)^m*H2m_n(in), (-1)^m*dH2m_n(in), 0, 0,...
%                        q_0, p_0, m,...
%                        k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                        B_1_n_m(in), B_2_n_m(in), Cm2_n_m(in), Dm2_n_m(in), 0, 1).*...
%                        a_p_field_delta_Hwave_forw);
 end
 
 
 
%%%%%%%%%%% For free space part %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[M_core_beta1_alphaE, M_core_beta2_alphaE] = M_core___deltaFunctionWave(typeOfCylinder, q, p, k_0, k_0, a_0, EE1, GG1, HH1, MU1, EE, MU, m, 1, 0);
[M_core_beta1_alphaH, M_core_beta2_alphaH] = M_core___deltaFunctionWave(typeOfCylinder, q, p, k_0, k_0, a_0, EE1, GG1, HH1, MU1, EE, MU, m, 0, 1);

ExpZ = exp(1i * k_0 * p * L);
M_core_beta1_alphaE = M_core_beta1_alphaE.* ExpZ;
M_core_beta2_alphaE = M_core_beta2_alphaE.* ExpZ;
M_core_beta1_alphaH = M_core_beta1_alphaH.* ExpZ;
M_core_beta2_alphaH = M_core_beta2_alphaH.* ExpZ;

N_p = (4 * pi / k_0^2) * (-1)^m * (-p./ q);
for ialpha = 1:2
    for iq = 1:Nmax

        matrix(iq + (ialpha-1)*Nmax + bNmax, iq + (ialpha-1)*Nmax + bNmax) =  matrix(iq + (ialpha-1)*Nmax + bNmax, iq + (ialpha-1)*Nmax + bNmax)+...
            k_0/2/pi * (-1)^(ialpha - 1) * N_p(iq);

        for ibeta = 1:2
                if(ibeta == 1)
                    KcoE = K_beta1Min_alphEMin(iq,:);
                    KcoH = K_beta1Min_alphHMin(iq,:);
                    
                    matrix(iq + (ialpha-1)*Nmax + bNmax, ([1:Nmax]))        = matrix(iq + (ialpha-1)*Nmax + bNmax, ([1:Nmax])) +...
                          (2- ialpha) * k_0/2/pi * Aj.* KcoE +...
                          (ialpha- 1) * k_0/2/pi * Aj.* KcoH; 
                elseif(ibeta == 2)
                    KcoE = K_beta2Min_alphEMin(iq,:);
                    KcoH = K_beta2Min_alphHMin(iq,:);
                    
                    matrix(iq + (ialpha-1)*Nmax + bNmax, ([1:Nmax]) + Nmax) = matrix(iq + (ialpha-1)*Nmax + bNmax, ([1:Nmax]) + Nmax) +...
                          (2- ialpha) * k_0/2/pi * Aj.* KcoE +...
                          (ialpha- 1) * k_0/2/pi * Aj.* KcoH;
                end       
        end
        
%         for in = 1:size(q_n,1)
%             matrix(iq + (ialpha-1)*Nmax + bNmax, in + 2*Nmax) = matrix(iq + (ialpha-1)*Nmax + bNmax, in + 2*Nmax) +...
%                 q(iq) * K_core(typeOfCylinder, q_n(in), -p_n(in), 0, m, H2m_n(in), dH2m_n(in), 0, 0,...
%                              q(iq), -p(iq), -m,...
%                              k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
%                              B_1_n(in), B_2_n(in), Cm2_n(in), Dm2_n(in), (2-ialpha), (ialpha-1));
%         end
            matrix(iq + (ialpha-1)*Nmax + bNmax, [1:size(q_n,1)] + 2*Nmax) = matrix(iq + (ialpha-1)*Nmax + bNmax, in + 2*Nmax) +...
                q(iq) * K_core(typeOfCylinder, q_n, -p_n, 0, m, H2m_n, dH2m_n, 0, 0,...
                             q(iq), -p(iq), -m,...
                             k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z0,...
                             B_1_n, B_2_n, Cm2_n, Dm2_n, (2-ialpha), (ialpha-1));
                         
            rightSide(iq + (ialpha-1)*Nmax + bNmax) = rightSide(iq + (ialpha-1)*Nmax + bNmax) +...
                                   - k_0/2/pi * (2 - ialpha) * q(iq).* (M_core_beta1_alphaE(iq).* a_cs_alfa1_forw(iq) + M_core_beta2_alphaE(iq).* a_cs_alfa2_forw(iq)) +...
                                   - k_0/2/pi * (ialpha - 1) * q(iq).* (M_core_beta1_alphaH(iq).* a_cs_alfa1_forw(iq) + M_core_beta2_alphaH(iq).* a_cs_alfa2_forw(iq));

                         
            rightSide(iq + (ialpha-1)*Nmax + bNmax) = rightSide(iq + (ialpha-1)*Nmax + bNmax) +...
                           (2 - ialpha) * K_beta0PL_alphEMin(iq) +...
                           (ialpha - 1) * K_beta0PL_alphHMin(iq);
    end   
end

  
bp_ap = matrix \ rightSide;

b_p_field_1_back = bp_ap(1:Nmax).';
b_p_field_2_back = bp_ap(Nmax+1:2*Nmax).';
        b_n_back = bp_ap(2*Nmax+1:bNmax);
  a_p_Ebeam_forw = bp_ap(bNmax+1:bNmax+Nmax).';
  a_p_Hbeam_forw = bp_ap(bNmax+Nmax+1:bNmax+2*Nmax).';


