function [a_p_Ebeam_forw, a_p_Hbeam_forw, a_p_Ebeam_back,a_p_Hbeam_back] =...
               scatteringCoeffs_of_gyrotrop_forFieldRepresentation(typeOfCylinder, dq_simp, q, p, q_n, p_n, q_0, p_0, k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, m, z, AE_0, AH_0)


switch(typeOfCylinder)
    case 'Isotropic'
            %%% first type of waves
            psi_forward_1  = psi1_q(k_0, k, a_0, EE1, MU1, EE, MU, m,   p, q);
            %%% second type of waves
            psi_forward_2  = psi2_q(k_0, k, a_0, EE1, MU1, EE, MU, m,   p, q);
    case 'Gyrotropic'
            %%% first type of waves
            psi_forward_1  = psi1_q__gyrotropic(k_0, k, a_0, EE1, GG1, HH1, m,   p, q);
            %%% second type of waves            
            psi_forward_2  = psi2_q__gyrotropic(k_0, k, a_0, EE1, GG1, HH1, m,   p, q);
end
      
%  H2m  = besselh(m, 2, k_0.* a_0 * q);
%  dH2m = (H2m * m)./ (k_0.* a_0 * q)  - besselh(m + 1, 2, k_0.* a_0 * q);
%  H1m  = besselh(m, 1, k_0.* a_0 * q);
%  dH1m = (H1m * m)./ (k_0.* a_0 * q)  - besselh(m + 1, 1, k_0.* a_0 * q);
 
    Q = k.* a_0 * q;
    JmmQ  = besselj(m, Q);
    YmmQ  = bessely(m, Q);
    JMmQ  = besselj(m + 1, Q);
    YMmQ  = bessely(m + 1, Q);
%     %%% необходимо, чтобы при стремлении аргумента функции Ханкеля к бесконечности сама функция была ограниченной  
    H1m  = JmmQ + 1i * YmmQ;
    dH1m = (H1m * m)./ Q  - (JMmQ + 1i * YMmQ);
    H2m  = JmmQ - 1i * YmmQ;
    dH2m = (H2m * m)./ Q  - (JMmQ - 1i * YMmQ);
 

[B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1]  =         coefficientsOfContinuousSpectrum(typeOfCylinder, k_0, k, a_0, EE1, -GG1, HH1, MU1, EE, MU, -m, -p, q, psi_forward_1, 1);
[B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2]  = coefficientsOfContinuousSpectrum_forPsi2(typeOfCylinder, k_0, k, a_0, EE1, -GG1, HH1, MU1, EE, MU, -m, -p, q, psi_forward_2, 1);
[B_1_n, B_2_n, Cm2_n, Dm2_n]  = coefficientsOfDiscreteSpectrum(typeOfCylinder, k_0, k, a_0, EE1, -GG1, HH1, MU1, EE, MU, -m, -p_n, q_n, 0, 1);
 H2m_n  = besselh(m, 2, k_0.* a_0 * q_n);
 dH2m_n = (H2m_n * m)./ (k_0.* a_0 * q_n)  - besselh(m + 1, 2, k_0.* a_0 * q_n);
  q1_n = sqrt(EE1*MU1 - p_n.^2);
 Jtmq1_n    = besselj(m  , k_0.* a_0* q1_n);
 Jtm_1q1_n  = besselj(m-1, k_0.* a_0* q1_n);
 Jtmpl1q1_n = besselj(m+1, k_0.* a_0* q1_n);
 Jtmpl2q1_n = besselj(m+2, k_0.* a_0* q1_n); 

             
%            K_beta1Min_alph0PL =...
%                 K_core(typeOfCylinder, q, -p, psi_forward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                        q_0, p_0, m,...
%                        k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                        B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, AE_0, 0) +...
%                 K_core(typeOfCylinder, q, -p, psi_forward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                        q_0, p_0, m,...
%                        k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                        B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 0, AH_0);
%                 
%            K_beta2Min_alph0PL =...
%                  K_core(typeOfCylinder, q, -p, psi_forward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                         q_0, p_0, m,...
%                         k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                         B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, AE_0, 0) +...
%                  K_core(typeOfCylinder, q, -p, psi_forward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                         q_0, p_0, m,...
%                         k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                         B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 0, AH_0);
%                     
%            K_nMin_alph0PL =...
%                (K_core(typeOfCylinder, q_n, -p_n, 0, -m, (-1)^m*H2m_n, (-1)^m*dH2m_n, 0, 0,...
%                         q_0, p_0, m,...
%                         k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                         B_1_n, B_2_n, Cm2_n, Dm2_n, AE_0, 0) +...
%                  K_core(typeOfCylinder, q_n, -p_n, 0, -m, (-1)^m*H2m_n, (-1)^m*dH2m_n, 0, 0,...
%                         q_0, p_0, m,...
%                         k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                         B_1_n, B_2_n, Cm2_n, Dm2_n, 0, AH_0));
                    
                    

%%%%%%%%%%%%%%%%% kores of integral equations %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
K_beta1PL_alphEMin = zeros(size(q,2),size(q,2));
K_beta2PL_alphEMin = zeros(size(q,2),size(q,2));
K_beta1PL_alphHMin = zeros(size(q,2),size(q,2));
K_beta2PL_alphHMin = zeros(size(q,2),size(q,2));
K_beta1Min_alphEMin = zeros(size(q,2),size(q,2));
K_beta1Min_alphHMin = zeros(size(q,2),size(q,2));
K_beta2Min_alphEMin = zeros(size(q,2),size(q,2));
K_beta2Min_alphHMin = zeros(size(q,2),size(q,2));
switch(typeOfCylinder)
        case 'Isotropic'
                q1 = sqrt(EE1*MU1 - p.^2);
                Jtmq1    = besselj(-m  , k_0.* a_0* q1);
                Jtm_1q1  = besselj(-m-1, k_0.* a_0* q1);
                Jtmpl1q1 = besselj(-m+1, k_0.* a_0* q1);
                Jtmpl2q1 = besselj(-m+2, k_0.* a_0* q1);
                Jtmq1_pl    = besselj(m  , k_0.* a_0* q1);
                Jtm_1q1_pl  = besselj(m-1, k_0.* a_0* q1);
                Jtmpl1q1_pl = besselj(m+1, k_0.* a_0* q1);
                Jtmpl2q1_pl = besselj(m+2, k_0.* a_0* q1);
                Jtmtq    = besselj(m  , k_0.* a_0* q);
                Jtmpl1tq = besselj(m+1, k_0.* a_0* q);
                Jtm_1tq  = besselj(m-1, k_0.* a_0* q);
                Jtmpl2tq = besselj(m+2, k_0.* a_0* q);
                Jtmtq_min    = besselj(-m  , k_0.* a_0* q);
                Jtmpl1tq_min = besselj(-m+1, k_0.* a_0* q);
                Jtm_1tq_min  = besselj(-m-1, k_0.* a_0* q);
                Jtmpl2tq_min = besselj(-m+2, k_0.* a_0* q);
            for iq = 1:size(q,2)

% %                 
% %                 K_beta1PL_alphEMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, p, psi_forward_1, m, H2m, dH2m, H1m, dH1m,...
% %                                                  q(iq), p(iq), -m,...
% %                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
% %                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 1, 0,...
% %                                                  Jtmtq_min(iq),Jtmpl1tq_min(iq), Jtm_1tq_min(iq), Jtmpl2tq_min(iq),...
% %                                                  Jtmq1, Jtm_1q1, Jtmpl1q1, Jtmpl2q1);
% %                 K_beta2PL_alphEMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, p, psi_forward_2, m, H2m, dH2m, H1m, dH1m,...
% %                                                  q(iq), p(iq), -m,...
% %                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
% %                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 1, 0,...
% %                                                  Jtmtq_min(iq),Jtmpl1tq_min(iq), Jtm_1tq_min(iq), Jtmpl2tq_min(iq),...
% %                                                  Jtmq1, Jtm_1q1, Jtmpl1q1, Jtmpl2q1);
% %                 K_beta1PL_alphHMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, p, psi_forward_1, m, H2m, dH2m, H1m, dH1m,...
% %                                                  q(iq), p(iq), -m,...
% %                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
% %                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 0, 1,...
% %                                                  Jtmtq_min(iq),Jtmpl1tq_min(iq), Jtm_1tq_min(iq), Jtmpl2tq_min(iq),...
% %                                                  Jtmq1, Jtm_1q1, Jtmpl1q1, Jtmpl2q1);
% %                 K_beta2PL_alphHMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, p, psi_forward_2, m, H2m, dH2m, H1m, dH1m,...
% %                                                  q(iq), p(iq), -m,...
% %                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
% %                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 0, 1,...
% %                                                  Jtmtq_min(iq),Jtmpl1tq_min(iq), Jtm_1tq_min(iq), Jtmpl2tq_min(iq),...
% %                                                  Jtmq1, Jtm_1q1, Jtmpl1q1, Jtmpl2q1);
% 
%                 
%                 K_beta1Min_alphEMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, -p, psi_forward_1, m, H2m, dH2m, H1m, dH1m,...
%                                                  q(iq), -p(iq), -m,...
%                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 1, 0,...
%                                                  Jtmtq_min(iq),Jtmpl1tq_min(iq), Jtm_1tq_min(iq), Jtmpl2tq_min(iq),...
%                                                  Jtmq1, Jtm_1q1, Jtmpl1q1, Jtmpl2q1);
%                 K_beta2Min_alphEMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, -p, psi_forward_2, m, H2m, dH2m, H1m, dH1m,...
%                                                  q(iq), -p(iq), -m,...
%                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 1, 0,...
%                                                  Jtmtq_min(iq),Jtmpl1tq_min(iq), Jtm_1tq_min(iq), Jtmpl2tq_min(iq),...
%                                                  Jtmq1, Jtm_1q1, Jtmpl1q1, Jtmpl2q1);
%                 K_beta1Min_alphHMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, -p, psi_forward_1, m, H2m, dH2m, H1m, dH1m,...
%                                                  q(iq), -p(iq), -m,...
%                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 0, 1,...
%                                                  Jtmtq_min(iq),Jtmpl1tq_min(iq), Jtm_1tq_min(iq), Jtmpl2tq_min(iq),...
%                                                  Jtmq1, Jtm_1q1, Jtmpl1q1, Jtmpl2q1);
%                 K_beta2Min_alphHMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, -p, psi_forward_2, m, H2m, dH2m, H1m, dH1m,...
%                                                  q(iq), -p(iq), -m,...
%                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 0, 1,...
%                                                  Jtmtq_min(iq),Jtmpl1tq_min(iq), Jtm_1tq_min(iq), Jtmpl2tq_min(iq),...
%                                                  Jtmq1, Jtm_1q1, Jtmpl1q1, Jtmpl2q1);
%                                              
% %                 K_beta1Min_alphEMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, -p, psi_forward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
% %                                                  q(iq), -p(iq), m,...
% %                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
% %                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 1, 0,...
% %                                                  Jtmtq(iq),Jtmpl1tq(iq), Jtm_1tq(iq), Jtmpl2tq(iq),...
% %                                                  Jtmq1_pl, Jtm_1q1_pl, Jtmpl1q1_pl, Jtmpl2q1_pl);
% %                 K_beta1Min_alphHMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, -p, psi_forward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
% %                                                  q(iq), -p(iq), m,...
% %                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
% %                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 0, 1,...
% %                                                  Jtmtq(iq),Jtmpl1tq(iq), Jtm_1tq(iq), Jtmpl2tq(iq),...
% %                                                  Jtmq1_pl, Jtm_1q1_pl, Jtmpl1q1_pl, Jtmpl2q1_pl);
% %                 K_beta2Min_alphEMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, -p, psi_forward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
% %                                                  q(iq), -p(iq), m,...
% %                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
% %                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 1, 0,...
% %                                                  Jtmtq(iq),Jtmpl1tq(iq), Jtm_1tq(iq), Jtmpl2tq(iq),...
% %                                                  Jtmq1_pl, Jtm_1q1_pl, Jtmpl1q1_pl, Jtmpl2q1_pl);
% %                 K_beta2Min_alphHMin(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, -p, psi_forward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
% %                                                  q(iq), -p(iq), m,...
% %                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
% %                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 0, 1,...
% %                                                  Jtmtq(iq),Jtmpl1tq(iq), Jtm_1tq(iq), Jtmpl2tq(iq),...
% %                                                  Jtmq1_pl, Jtm_1q1_pl, Jtmpl1q1_pl, Jtmpl2q1_pl);
%                                              
% 
%                                              
%                 K_beta1PL_alphEPL(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, p, psi_forward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                                                  q(iq), p(iq), m,...
%                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 1, 0,...
%                                                  Jtmtq(iq),Jtmpl1tq(iq), Jtm_1tq(iq), Jtmpl2tq(iq),...
%                                                  Jtmq1_pl, Jtm_1q1_pl, Jtmpl1q1_pl, Jtmpl2q1_pl);
%                 K_beta1PL_alphHPL(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, p, psi_forward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                                                  q(iq), p(iq), m,...
%                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 0, 1,...
%                                                  Jtmtq(iq),Jtmpl1tq(iq), Jtm_1tq(iq), Jtmpl2tq(iq),...
%                                                  Jtmq1_pl, Jtm_1q1_pl, Jtmpl1q1_pl, Jtmpl2q1_pl);
%                 K_beta2PL_alphEPL(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, p, psi_forward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                                                  q(iq), p(iq), m,...
%                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 1, 0,...
%                                                  Jtmtq(iq),Jtmpl1tq(iq), Jtm_1tq(iq), Jtmpl2tq(iq),...
%                                                  Jtmq1_pl, Jtm_1q1_pl, Jtmpl1q1_pl, Jtmpl2q1_pl);
%                 K_beta2PL_alphHPL(iq,:) = q(iq).* K_core_speedy3(typeOfCylinder, q, p, psi_forward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                                                  q(iq), p(iq), m,...
%                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 0, 1,...
%                                                  Jtmtq(iq),Jtmpl1tq(iq), Jtm_1tq(iq), Jtmpl2tq(iq),...
%                                                  Jtmq1_pl, Jtm_1q1_pl, Jtmpl1q1_pl, Jtmpl2q1_pl);
            end
            
        case 'Gyrotropic'
            
            [q1, q2, n1, n2, alp1, alp2, bet1, bet2] = term_of_gyrotropic_waveguide(EE1, GG1, HH1, p);
            JM0    = besselj(m+1, (q.* a_0).* k_0);                            
            JM1    = besselj(m+1, (q1.* a_0).* k_0);
            JM2    = besselj(m+1, (q2.* a_0).* k_0);
            JMM0   = besselj(m+2, (q.* a_0).* k_0);
            JMM1   = besselj(m+2, (q1.* a_0).* k_0);
            JMM2   = besselj(m+2, (q2.* a_0).* k_0);
            Jm0    = besselj(m, (q.* a_0).* k_0);
            Jm1    = besselj(m, (q1.* a_0).* k_0);
            Jm2    = besselj(m, (q2.* a_0).* k_0);
            
            [q1_min, q2_min, n1_min, n2_min, alp1_min, alp2_min, bet1_min, bet2_min] = term_of_gyrotropic_waveguide(EE1, -GG1, HH1, -p);
            JM0_min    = besselj(-m+1, (q.* a_0).* k_0);                            
            JM1_min    = besselj(-m+1, (q1_min.* a_0).* k_0);
            JM2_min    = besselj(-m+1, (q2_min.* a_0).* k_0);
            JMM0_min   = besselj(-m+2, (q.* a_0).* k_0);
            JMM1_min   = besselj(-m+2, (q1_min.* a_0).* k_0);
            JMM2_min   = besselj(-m+2, (q2_min.* a_0).* k_0);
            Jm0_min    = besselj(-m, (q.* a_0).* k_0);
            Jm1_min    = besselj(-m, (q1_min.* a_0).* k_0);
            Jm2_min    = besselj(-m, (q2_min.* a_0).* k_0);
%             for iq = 1:size(q,2)
%                 K_beta1PL_alphEMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, p, psi_forward_1, m, H2m, dH2m, H1m, dH1m,...
%                                                  q(iq), p(iq), -m,...
%                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 1, 0,...
%                                                  0,0, 0, 0,...
%                                                  0, 0, 0, 0,...
%                                                  JM0(iq),JM1,JM2,JMM0(iq),JMM1,JMM2,Jm0(iq),Jm1,Jm2,...
%                                                  q1, q2, n1, n2, alp1, alp2, bet1, bet2);
%                 K_beta2PL_alphEMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, p, psi_forward_2, m, H2m, dH2m, H1m, dH1m,...
%                                                  q(iq), p(iq), -m,...
%                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 1, 0,...
%                                                  0,0, 0, 0,...
%                                                  0, 0, 0, 0,...
%                                                  JM0(iq),JM1,JM2,JMM0(iq),JMM1,JMM2,Jm0(iq),Jm1,Jm2,...
%                                                  q1, q2, n1, n2, alp1, alp2, bet1, bet2);
%                 K_beta1PL_alphHMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, p, psi_forward_1, m, H2m, dH2m, H1m, dH1m,...
%                                                  q(iq), p(iq), -m,...
%                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 0, 1,...
%                                                  0,0, 0, 0,...
%                                                  0, 0, 0, 0,...
%                                                  JM0(iq),JM1,JM2,JMM0(iq),JMM1,JMM2,Jm0(iq),Jm1,Jm2,...
%                                                  q1, q2, n1, n2, alp1, alp2, bet1, bet2);
%                 K_beta2PL_alphHMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, p, psi_forward_2, m, H2m, dH2m, H1m, dH1m,...
%                                                  q(iq), p(iq), -m,...
%                                                  k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 0, 1,...
%                                                  0,0, 0, 0,...
%                                                  0, 0, 0, 0,...
%                                                  JM0(iq),JM1,JM2,JMM0(iq),JMM1,JMM2,Jm0(iq),Jm1,Jm2,...
%                                                  q1, q2, n1, n2, alp1, alp2, bet1, bet2);
%                                              
%                 K_beta1Min_alphEMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, -p, psi_forward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                                                  q(iq), -p(iq), m,...
%                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 1, 0,...
%                                                  0,0, 0, 0,...
%                                                  0, 0, 0, 0,...
%                                                  JM0_min(iq),JM1_min,JM2_min,JMM0_min(iq),JMM1_min,JMM2_min,Jm0_min(iq),Jm1_min,Jm2_min,...
%                                                  q1_min, q2_min, n1_min, n2_min, alp1_min, alp2_min, bet1_min, bet2_min);
%                 K_beta1Min_alphHMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, -p, psi_forward_1, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                                                  q(iq), -p(iq), m,...
%                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                                                  B_1_beta1, B_2_beta1, Cm2_beta1, Dm2_beta1, 0, 1,...
%                                                  0,0, 0, 0,...
%                                                  0, 0, 0, 0,...
%                                                  JM0_min(iq),JM1_min,JM2_min,JMM0_min(iq),JMM1_min,JMM2_min,Jm0_min(iq),Jm1_min,Jm2_min,...
%                                                  q1_min, q2_min, n1_min, n2_min, alp1_min, alp2_min, bet1_min, bet2_min);
%                 K_beta2Min_alphEMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, -p, psi_forward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                                                  q(iq), -p(iq), m,...
%                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 1, 0,...
%                                                  0,0, 0, 0,...
%                                                  0, 0, 0, 0,...
%                                                  JM0_min(iq),JM1_min,JM2_min,JMM0_min(iq),JMM1_min,JMM2_min,Jm0_min(iq),Jm1_min,Jm2_min,...
%                                                  q1_min, q2_min, n1_min, n2_min, alp1_min, alp2_min, bet1_min, bet2_min);
%                 K_beta2Min_alphHMin(iq,:) = q(iq).* K_core_speedy_gyro(typeOfCylinder, q, -p, psi_forward_2, -m, (-1)^m*H2m, (-1)^m*dH2m, (-1)^m*H1m, (-1)^m*dH1m,...
%                                                  q(iq), -p(iq), m,...
%                                                  k_0, k, a_0, EE1, -GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
%                                                  B_1_beta2, B_2_beta2, Cm2_beta2, Dm2_beta2, 0, 1,...
%                                                  0,0, 0, 0,...
%                                                  0, 0, 0, 0,...
%                                                  JM0_min(iq),JM1_min,JM2_min,JMM0_min(iq),JMM1_min,JMM2_min,Jm0_min(iq),Jm1_min,Jm2_min,...
%                                                  q1_min, q2_min, n1_min, n2_min, alp1_min, alp2_min, bet1_min, bet2_min);
%             end
            
end


%%%%%%%%%%%%%%%%%%% right sides of system for eigenwaveguide
for in = 1:size(q_n,1)
    N_p_beta_des(in,1) = Norm_of_descreteMode(typeOfCylinder, q_n(in), p_n(in), k_0, a_0, EE1, GG1, HH1, MU1, EE, MU, m);
end
 
 H2m0  = besselh(m, 2, k_0.* a_0 * q_0);
 dH2m0 = (H2m0 * m)./ (k_0.* a_0 * q_0)  - besselh(m + 1, 2, k_0.* a_0 * q_0);
 H1m0  = besselh(m, 1, k_0.* a_0 * q_0);
 dH1m0 = (H1m0 * m)./ (k_0.* a_0 * q_0)  - besselh(m + 1, 1, k_0.* a_0 * q_0);
 %%%%%% singular wave in waveguide
 [b_p_1_delta_forw, b_p_2_delta_forw, psi_delta_1, psi_delta_2,...
    B_1_delta_1,B_2_delta_1,Cm2_delta_1,  Dm2_delta_1,...
    B_1_delta_2,B_2_delta_2,Cm2_delta_2,  Dm2_delta_2] = coefficientsOf_deltaFunctionWave(typeOfCylinder, q_0, p_0, k_0, k_0, a_0, EE1, GG1, HH1, MU1, EE, MU, m, AE_0, AH_0);


%%%%%% minuses are here because K_core wrote for "left edge", not "right
%%%%%% edge"
K_beta0PL_alphEMin =-(q.* K_core(typeOfCylinder, q_0, p_0, psi_delta_1, m, H2m0, dH2m0, H1m0, dH1m0,...
                           q, -p, -m,...
                           k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
                           B_1_delta_1,B_2_delta_1,Cm2_delta_1, Dm2_delta_1, 1, 0).* b_p_1_delta_forw +...
                     q.* K_core(typeOfCylinder, q_0, p_0, psi_delta_2, m, H2m0, dH2m0, H1m0, dH1m0,...
                           q, -p, -m,...
                           k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
                           B_1_delta_2,B_2_delta_2,Cm2_delta_2, Dm2_delta_2, 1, 0).* b_p_2_delta_forw);
K_beta0PL_alphHMin =-(q.* K_core(typeOfCylinder, q_0, p_0, psi_delta_1, m, H2m0, dH2m0, H1m0, dH1m0,...
                           q, -p, -m,...
                           k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
                           B_1_delta_1,B_2_delta_1,Cm2_delta_1, Dm2_delta_1, 0, 1).* b_p_1_delta_forw +...
                     q.* K_core(typeOfCylinder, q_0, p_0, psi_delta_2, m, H2m0, dH2m0, H1m0, dH1m0,...
                           q, -p, -m,...
                           k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
                           B_1_delta_2,B_2_delta_2,Cm2_delta_2, Dm2_delta_2, 0, 1).* b_p_2_delta_forw);
                       
K_beta0PL_alphEPL  =-(q.* K_core(typeOfCylinder, q_0, p_0, psi_delta_1, m, H2m0, dH2m0, H1m0, dH1m0,...
                           q, p, -m,...
                           k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
                           B_1_delta_1,B_2_delta_1,Cm2_delta_1, Dm2_delta_1, 1, 0).* b_p_1_delta_forw +...
                     q.* K_core(typeOfCylinder, q_0, p_0, psi_delta_2, m, H2m0, dH2m0, H1m0, dH1m0,...
                           q, p, -m,...
                           k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
                           B_1_delta_2,B_2_delta_2,Cm2_delta_2, Dm2_delta_2, 1, 0).* b_p_2_delta_forw);
K_beta0PL_alphHPL  =-(q.* K_core(typeOfCylinder, q_0, p_0, psi_delta_1, m, H2m0, dH2m0, H1m0, dH1m0,...
                           q, p, -m,...
                           k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
                           B_1_delta_1,B_2_delta_1,Cm2_delta_1, Dm2_delta_1, 0, 1).* b_p_1_delta_forw +...
                     q.* K_core(typeOfCylinder, q_0, p_0, psi_delta_2, m, H2m0, dH2m0, H1m0, dH1m0,...
                           q, p, -m,...
                           k_0, k, a_0, EE1, GG1, HH1, MU1, EE2, MU2, EE, MU, z,...
                           B_1_delta_2,B_2_delta_2,Cm2_delta_2, Dm2_delta_2, 0, 1).* b_p_2_delta_forw);
                       

%%%%%% singular wave in free space


%%%%%%%%%%% forming of marix for search the excitation coeff %%%%%%%%%%%%%%
%%%%%%%%%%% For waveguide part %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     Nmax = size(q,2); 
    bNmax = 2*Nmax; 
   matrix = zeros(4*Nmax, 4*Nmax);
rightSide = zeros(4*Nmax,2);

Aj = dq_simp;
 
 
%%%%%%%%%%% For free space part %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%% back waves %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
N_p = -(4 * pi / k_0^2) * (-1)^m * (-p./ q);
for ialpha = 1:2
    for iq = 1:Nmax

        matrix(iq + (ialpha-1)*Nmax, iq + (ialpha-1)*Nmax) =...
            k_0/2/pi * (-1)^(ialpha - 1) * N_p(iq);

            rightSide(iq + (ialpha-1)*Nmax) = (2 - ialpha) * k_0/2/pi * K_beta0PL_alphEPL(iq) +...
                                              (ialpha - 1) * k_0/2/pi * K_beta0PL_alphHPL(iq);
    end   
end

%%%%%%%%%%% forward waves %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
N_p = (4 * pi / k_0^2) * (-1)^m * (-p./ q);
for ialpha = 1:2
    for iq = 1:Nmax

        matrix(iq + (ialpha-1)*Nmax + bNmax, iq + (ialpha-1)*Nmax + bNmax) =...
            k_0/2/pi * (-1)^(ialpha - 1) * N_p(iq);

            rightSide(iq + (ialpha-1)*Nmax + bNmax) = (2 - ialpha) * k_0/2/pi * K_beta0PL_alphEMin(iq) +...
                                                      (ialpha - 1) * k_0/2/pi * K_beta0PL_alphHMin(iq);
    end   
end

  
bp_ap = matrix \ rightSide;

a_p_Ebeam_back = bp_ap(1:Nmax);
a_p_Hbeam_back = bp_ap(Nmax+1:2*Nmax);
  a_p_Ebeam_forw = bp_ap(bNmax+1:bNmax+Nmax);
  a_p_Hbeam_forw = bp_ap(bNmax+Nmax+1:bNmax+2*Nmax);



